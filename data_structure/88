//双指针法，复杂度为O(m+n)
//也可以先合并，再sort，但复杂度较高
#include<stdio.h>

void merge(int* nums1, int nums1Size, int m, int* nums2, int nums2Size, int n){
    int sort[m+n];
    int i=0,j=0,k=0;
    int num = 0;
    while(j<m||k<n){
        if(j>=m){
            num = nums2[k];
            k++;
        }
        else if(k>=n){
            num = nums1[j];
            j++;
        }
        else{
            if(nums1[j]<=nums2[k]){
                num = nums1[j];
                j++;
            }
            else{
                num = nums2[k];
                k++;
            }
        }
        sort[i] = num;
        i++;
    }
    for(i=0;i<m+n;i++)
        nums1[i] = sort[i];
}

int main(){
    int nums1[6] = {1,2,3,0,0,0};
    int nums2[3] = {2,5,6};
    merge(nums1,6,3,nums2,3,3);
    for(int i=0; i<6; i++){
        printf("\n%d ",nums1[i]);
    }
    printf("\n");
    return 0;
}
